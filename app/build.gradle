plugins {
    id 'com.android.application'
    id 'com.github.triplet.play' version '3.4.0-agp4.2'
    id "org.sonarqube" version "3.2.0"
}

play {
    defaultToAppBundles = true
    serviceAccountCredentials = file("google-services.json")
    track = "alpha"
    releaseStatus = com.github.triplet.gradle.androidpublisher.ReleaseStatus.DRAFT
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.wirehall.audiorecorder"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 150
        versionName "1.5.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        keystorePropertiesFile.with { f ->
            if (f.canRead()) {
                release {
                    keyAlias keystoreProperties['keyAlias']
                    keyPassword keystoreProperties['keyPassword']
                    storeFile file(keystoreProperties['storeFile'])
                    storePassword keystoreProperties['storePassword']
                }
            } else {
                print('not signed')
            }
        }
    }
    buildTypes {
        keystorePropertiesFile.with { f ->
            if (f.canRead()) {
                release {
                    debuggable false
                    minifyEnabled true
                    shrinkResources true
                    proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    signingConfig signingConfigs.release
                }
            }
        }

        debug {
            debuggable true
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '30.0.3'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.preference:preference:1.1.1'
}

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.projectKey", "vivekweb2013_audio-recorder"
        property "sonar.organization", "vivekweb2013"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}